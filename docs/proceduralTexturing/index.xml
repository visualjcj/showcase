<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template</title><link>https://visualjcj.github.io/showcase/docs/proceduralTexturing/</link><description>Recent content on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualjcj.github.io/showcase/docs/proceduralTexturing/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualjcj.github.io/showcase/docs/proceduralTexturing/background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualjcj.github.io/showcase/docs/proceduralTexturing/background/</guid><description>Background # Truchet Tiles # Desde la antiguedad, algunas civilizaciones esculpian baldosas con con diferentes figuras dentro de un cuadrado para generar patrones, estas baldosas adornaban algunos de los palacios mas antiguos
En el siglo XVIII, los franceses Sébastian Truchet y Dominique Doüat, tomaron cuatro orientaciones de una baldosa con una diagonal de un color y la otra de otro (en este caso negro y blanco), y realizaron un analisis combinatorio de los posbiles patrones que se pueden generar a partir de las cuatro rotaciones de las baldosas, ellos nos solamente estudiaron las posibles combinaciones sino que ademas crearon por ellos mismos hermosos patrones</description></item><item><title/><link>https://visualjcj.github.io/showcase/docs/proceduralTexturing/conclusiones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualjcj.github.io/showcase/docs/proceduralTexturing/conclusiones/</guid><description> Conclusiones # Proyecciones futuras #</description></item><item><title/><link>https://visualjcj.github.io/showcase/docs/proceduralTexturing/problema/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualjcj.github.io/showcase/docs/proceduralTexturing/problema/</guid><description> Problema # Un ejercicio interesante para implementar con shaders es el de truchet tiles, el problema es que aunque se podria implementar por software, el generar todos estos patrones supone una gran carga por lo que implementarlo con shaders mejoraria el rendimiento, ademas de que se podria emplear en diferentes escenarios.
referencias a las imagenes:
img 1</description></item><item><title/><link>https://visualjcj.github.io/showcase/docs/proceduralTexturing/solucion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualjcj.github.io/showcase/docs/proceduralTexturing/solucion/</guid><description>Solucion # lo primero que se implementa es el fragment shader, para esto la idea es dividir con frag el shader y crear los patrones, para este caso no se construllo algun patron con los tiles en especifico sino que se empleo una funcion que genera aleatoreos para rotar las baldosas.
Truchet Tiles fragment shader #ifdef GL_ES precision mediump float; #endif uniform vec2 u_resolution; uniform float u_time; uniform int option; uniform float vel; // funcion para rotar las baldosas float Hash21(vec2 p){ p=fract(p*vec2(264.</description></item></channel></rss>